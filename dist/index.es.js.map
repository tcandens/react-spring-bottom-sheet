{"version":3,"file":"index.es.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useSpring.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\n\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\nexport const useLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\n","/* eslint-disable no-self-compare */\n\n// stolen from lodash\nexport function clamp(number: number, lower: number, upper: number) {\n  number = +number\n  lower = +lower\n  upper = +upper\n  lower = lower === lower ? lower : 0\n  upper = upper === upper ? upper : 0\n  if (number === number) {\n    number = number <= upper ? number : upper\n    number = number >= lower ? number : lower\n  }\n  return number\n}\n\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\nexport function deleteNaN(arr) {\n  const set = new Set(arr)\n  set.delete(NaN)\n  return [...set]\n}\n\nexport function roundAndCheckForNaN(unrounded) {\n  const rounded = Math.round(unrounded)\n  if (Number.isNaN(rounded)) {\n    return null\n  }\n\n  return rounded\n}\n\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\n\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\n    acc.add(clamp(snapPoint, 0, maxHeight))\n    return acc\n  }, new Set<number>())\n\n  const snapPoints = Array.from(snapPointsDedupedSet)\n\n  const minSnap = Math.min(...snapPoints)\n  if (Number.isNaN(minSnap)) {\n    throw new TypeError('minSnap is NaN')\n  }\n  const maxSnap = Math.max(...snapPoints)\n  if (Number.isNaN(maxSnap)) {\n    throw new TypeError('maxSnap is NaN')\n  }\n\n  return {\n    snapPoints,\n    minSnap,\n    maxSnap,\n  }\n}\n\nexport const debugging =\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\n    ? window.location.search === '?debug'\n    : false\n","import React, {\n  useCallback,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\nimport { useReady } from './useReady'\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\nimport { useLayoutEffect } from './useLayoutEffect'\n\nexport function useSnapPoints({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  getSnapPoints,\n  headerEnabled,\n  headerRef,\n  heightRef,\n  lastSnapRef,\n  ready,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  getSnapPoints: snapPoints\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  heightRef: React.RefObject<number>\n  lastSnapRef: React.RefObject<number>\n  ready: boolean\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\n    contentRef: contentRef,\n    controlledMaxHeight,\n    footerEnabled,\n    footerRef,\n    headerEnabled,\n    headerRef,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\n    ready\n      ? getSnapPoints({\n          height: heightRef.current,\n          footerHeight,\n          headerHeight,\n          minHeight,\n          maxHeight,\n        })\n      : [0],\n    maxHeight\n  )\n  //console.log({ snapPoints, minSnap, maxSnap })\n\n  // @TODO investigate the gains from memoizing this\n  function findSnap(\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\n  ) {\n    let unsafeSearch: number\n    if (typeof numberOrCallback === 'function') {\n      unsafeSearch = numberOrCallback({\n        footerHeight,\n        headerHeight,\n        height: heightRef.current,\n        minHeight,\n        maxHeight,\n        snapPoints,\n        lastSnap: lastSnapRef.current,\n      })\n    } else {\n      unsafeSearch = numberOrCallback\n    }\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\n    return snapPoints.reduce(\n      (prev, curr) =>\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\n      minSnap\n    )\n  }\n\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\n\n  return { minSnap, maxSnap, findSnap, maxHeight }\n}\n\nfunction useDimensions({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  headerEnabled,\n  headerRef,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const setReady = useMemo(() => registerReady('contentHeight'), [\n    registerReady,\n  ])\n  const maxHeight = useMaxHeight(\n    controlledMaxHeight,\n    registerReady,\n    resizeSourceRef\n  )\n\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\n  const headerHeight = useElementSizeObserver(headerRef, {\n    label: 'headerHeight',\n    enabled: headerEnabled,\n    resizeSourceRef,\n  })\n  const contentHeight = useElementSizeObserver(contentRef, {\n    label: 'contentHeight',\n    enabled: true,\n    resizeSourceRef,\n  })\n  const footerHeight = useElementSizeObserver(footerRef, {\n    label: 'footerHeight',\n    enabled: footerEnabled,\n    resizeSourceRef,\n  })\n  const minHeight =\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\n    headerHeight +\n    footerHeight\n\n  useDebugValue(`minHeight: ${minHeight}`)\n\n  const ready = contentHeight > 0\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  return {\n    maxHeight,\n    minHeight,\n    headerHeight,\n    footerHeight,\n  }\n}\n\nconst observerOptions: ResizeObserverOptions = {\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\n  // And the user hides or shows the Safari browser toolbar\n  box: 'border-box',\n}\n/**\n * Hook for determining the size of an element using the Resize Observer API.\n *\n * @param ref - A React ref to an element\n */\nfunction useElementSizeObserver(\n  ref: React.RefObject<Element>,\n  {\n    label,\n    enabled,\n    resizeSourceRef,\n  }: {\n    label: string\n    enabled: boolean\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\n  }\n): number {\n  let [size, setSize] = useState(0)\n\n  useDebugValue(`${label}: ${size}`)\n\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      // we only observe one element, so accessing the first entry here is fine\n      setSize(entries[0].borderBoxSize[0].blockSize)\n      resizeSourceRef.current = 'element'\n    },\n    [resizeSourceRef]\n  )\n\n  useLayoutEffect(() => {\n    if (!ref.current || !enabled) {\n      return\n    }\n\n    const resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(ref.current, observerOptions)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [ref, handleResize, enabled])\n\n  return enabled ? size : 0\n}\n\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\nfunction useMaxHeight(\n  controlledMaxHeight,\n  registerReady: ReturnType<typeof useReady>['registerReady'],\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n) {\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\n  const [maxHeight, setMaxHeight] = useState(() =>\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\n      ? window.innerHeight\n      : 0\n  )\n  const ready = maxHeight > 0\n  const raf = useRef(0)\n\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\n\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  useLayoutEffect(() => {\n    // Bail if the max height is a controlled prop\n    if (controlledMaxHeight) {\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\n      resizeSourceRef.current = 'maxheightprop'\n\n      return\n    }\n\n    const handleResize = () => {\n      if (raf.current) {\n        // bail to throttle the amount of resize changes\n        return\n      }\n\n      // throttle state changes using rAF\n      raf.current = requestAnimationFrame(() => {\n        setMaxHeight(window.innerHeight)\n        resizeSourceRef.current = 'window'\n\n        raf.current = 0\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    setMaxHeight(window.innerHeight)\n    resizeSourceRef.current = 'window'\n    setReady()\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      cancelAnimationFrame(raf.current)\n    }\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\n\n  return maxHeight\n}\n","import { createMachine, assign } from 'xstate'\n\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\n\n// interface OverlayStateSchema {\n//   states: {\n//     // the overlay usually starts in the closed position\n//     closed: {}\n//     opening: {\n//       states: {\n//         // Used to fire off the springStart event\n//         start: {}\n//         // Decide how to transition to the open state based on what the initialState is\n//         transition: {}\n//         // Fast enter animation, sheet is open by default\n//         immediately: {\n//           states: {\n//             open: {}\n//             activating: {}\n//           }\n//         }\n//         smoothly: {\n//           states: {\n//             // This state only happens when the overlay should start in an open state, instead of animating from the bottom\n//             // openImmediately: {}\n//             // visuallyHidden will render the overlay in the open state, but with opacity 0\n//             // doing this solves two problems:\n//             // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\n//             // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\n//             // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\n//             // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\n//             visuallyHidden: {}\n//             // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\n//             // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\n//             activating: {}\n//             // Animates from the bottom\n//             open: {}\n//           }\n//         }\n//         // Used to fire off the springEnd event\n//         end: {}\n//         // And finally we're ready to transition to open\n//         done: {}\n//       }\n//     }\n//     open: {}\n//     // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\n//     // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\n//     // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\n//     // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\n//     dragging: {}\n//     // snapping happens whenever transitioning to a new snap point, often after dragging\n//     snapping: {\n//       states: {\n//         start: {}\n//         snappingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//     resizing: {\n//       states: {\n//         start: {}\n//         resizingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//     closing: {\n//       states: {\n//         start: {}\n//         deactivating: {}\n//         closingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//   }\n// }\n\ntype OverlayEvent =\n  | { type: 'OPEN' }\n  | {\n      type: 'SNAP'\n      payload: {\n        y: number\n        velocity: number\n        source: 'dragging' | 'custom' | string\n      }\n    }\n  | { type: 'CLOSE' }\n  | { type: 'DRAG' }\n  | { type: 'RESIZE' }\n\n// The context (extended state) of the machine\ninterface OverlayContext {\n  initialState: 'OPEN' | 'CLOSED'\n  snapSource: string\n}\nfunction sleep(ms = 1000) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nconst cancelOpen = {\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\n}\nconst openToDrag = {\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\n}\nconst openToResize = {\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\n}\n\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\n\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\n\nexport const overlayMachine = createMachine<OverlayContext, OverlayEvent>(\n  {\n    id: 'overlay',\n    initial: 'closed',\n    context: { \n      initialState: 'CLOSED',\n      snapSource: undefined,\n    },\n    states: {\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\n      opening: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onOpenStart',\n              onDone: 'transition',\n            },\n          },\n          transition: {\n            always: [\n              { target: 'immediately', cond: 'initiallyOpen' },\n              { target: 'smoothly', cond: 'initiallyClosed' },\n            ],\n          },\n          immediately: {\n            initial: 'open',\n            states: {\n              open: {\n                invoke: { src: 'openImmediately', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          smoothly: {\n            initial: 'visuallyHidden',\n            states: {\n              visuallyHidden: {\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: 'open' },\n              },\n              open: {\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          end: {\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\n          },\n          done: {\n            type: 'final',\n          },\n        },\n        on: { ...cancelOpen },\n        onDone: 'open',\n      },\n      open: {\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\n      },\n      dragging: {\n        on: { SNAP: 'snapping' },\n      },\n      snapping: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onSnapStart',\n              onDone: 'snappingSmoothly',\n            },\n            entry: [\n              assign({\n                // @ts-expect-error\n                y: (_, { payload: { y } }) => y,\n                velocity(_, e) {\n                  if (e.type === 'SNAP') return e.payload.velocity\n                },\n                snapSource(_, e) {\n                  if (e.type === 'SNAP') return e.payload.source || 'custom'\n                }\n              }),\n            ],\n          },\n          snappingSmoothly: {\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\n            on: {\n              RESIZE: '#overlay.resizing',\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\n        },\n        onDone: 'open',\n      },\n      resizing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onResizeStart',\n              onDone: 'resizingSmoothly',\n            },\n          },\n          resizingSmoothly: {\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\n            on: {\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\n        },\n        onDone: 'open',\n      },\n      closing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onCloseStart',\n              onDone: 'deactivating',\n            },\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\n          },\n          deactivating: {\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\n          },\n          closingSmoothly: {\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\n            on: {\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          CLOSE: undefined,\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n        },\n        onDone: 'closed',\n      },\n    },\n    on: {\n      CLOSE: 'closing',\n    },\n  },\n  {\n    actions: {\n      onOpenCancel: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapCancel: (context, event) => {\n        console.log('onSnapCancel', { context, event })\n      },\n      onResizeCancel: (context, event) => {\n        console.log('onResizeCancel', { context, event })\n      },\n      onCloseCancel: (context, event) => {\n        console.log('onCloseCancel', { context, event })\n      },\n      onOpenEnd: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapEnd: (context, event) => {\n        console.log('onSnapEnd', { context, event })\n      },\n      onRezizeEnd: (context, event) => {\n        console.log('onRezizeEnd', { context, event })\n      },\n    },\n    services: {\n      onSnapStart: async () => {\n        await sleep()\n      },\n      onOpenStart: async () => {\n        await sleep()\n      },\n      onCloseStart: async () => {\n        await sleep()\n      },\n      onResizeStart: async () => {\n        await sleep()\n      },\n      onSnapEnd: async () => {\n        await sleep()\n      },\n      onOpenEnd: async () => {\n        await sleep()\n      },\n      onCloseEnd: async () => {\n        await sleep()\n      },\n      onResizeEnd: async () => {\n        await sleep()\n      },\n      renderVisuallyHidden: async (context, event) => {\n        console.group('renderVisuallyHidden')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      activate: async (context, event) => {\n        console.group('activate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      deactivate: async (context, event) => {\n        console.group('deactivate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openSmoothly: async (context, event) => {\n        console.group('openSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openImmediately: async (context, event) => {\n        console.group('openImmediately')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      snapSmoothly: async (context, event) => {\n        console.group('snapSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      resizeSmoothly: async (context, event) => {\n        console.group('resizeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      closeSmoothly: async (context, event) => {\n        console.group('closeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n    },\n    guards: { initiallyClosed, initiallyOpen },\n  }\n)\n","//\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\n// can be reclaimed after the sheet is closed and then unmounted.\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\n// cause race conditions.\n\nimport { useMachine } from '@xstate/react'\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { animated, config } from '@react-spring/web'\nimport { rubberbandIfOutOfBounds, useDrag } from '@use-gesture/react'\nimport {\n  useAriaHider,\n  useFocusTrap,\n  useLayoutEffect,\n  useReady,\n  useReducedMotion,\n  useScrollLock,\n  useSnapPoints,\n  useSpring,\n  useSpringInterpolations,\n} from './hooks'\nimport { overlayMachine } from './machines/overlay'\nimport type {\n  defaultSnapProps,\n  Props,\n  RefHandles,\n  ResizeSource,\n  SnapPointProps,\n} from './types'\nimport { debugging } from './utils'\n\nconst { tension, friction } = config.default\n\n// @TODO implement AbortController to deal with race conditions\n\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\nexport const BottomSheet = React.forwardRef<\n  RefHandles,\n  {\n    initialState: 'OPEN' | 'CLOSED'\n    lastSnapRef: React.MutableRefObject<number | null>\n  } & Props\n>(function BottomSheetInternal(\n  {\n    children,\n    sibling,\n    className,\n    footer,\n    header,\n    open: _open,\n    initialState,\n    lastSnapRef,\n    initialFocusRef,\n    onDismiss,\n    maxHeight: controlledMaxHeight,\n    defaultSnap: getDefaultSnap = _defaultSnap,\n    snapPoints: getSnapPoints = _snapPoints,\n    blocking = true,\n    scrollLocking = true,\n    style,\n    onSpringStart,\n    onSpringCancel,\n    onSpringEnd,\n    reserveScrollBarGap = blocking,\n    expandOnContentDrag = false,\n    ...props\n  },\n  forwardRef\n) {\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\n  // @TODO make ready its own state perhaps, before open or closed\n  const { ready, registerReady } = useReady()\n\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\n  const canDragRef = useRef(false)\n\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\n  const onSpringStartRef = useRef(onSpringStart)\n  const onSpringCancelRef = useRef(onSpringCancel)\n  const onSpringEndRef = useRef(onSpringEnd)\n  useEffect(() => {\n    onSpringStartRef.current = onSpringStart\n    onSpringCancelRef.current = onSpringCancel\n    onSpringEndRef.current = onSpringEnd\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\n\n  // Behold, the engine of it all!\n  const [spring, set] = useSpring()\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const headerRef = useRef<HTMLDivElement>(null)\n  const footerRef = useRef<HTMLDivElement>(null)\n  const overlayRef = useRef<HTMLDivElement | null>(null)\n\n  // Keeps track of the current height, or the height transitioning to\n  const heightRef = useRef(0)\n  const resizeSourceRef = useRef<ResizeSource>()\n  const preventScrollingRef = useRef(false)\n\n  const prefersReducedMotion = useReducedMotion()\n\n  // \"Plugins\" huhuhu\n  const scrollLockRef = useScrollLock({\n    targetRef: scrollRef,\n    enabled: ready && scrollLocking,\n    reserveScrollBarGap,\n  })\n  const ariaHiderRef = useAriaHider({\n    targetRef: containerRef,\n    enabled: ready && blocking,\n  })\n  const focusTrapRef = useFocusTrap({\n    targetRef: containerRef,\n    fallbackRef: overlayRef,\n    initialFocusRef: initialFocusRef || undefined,\n    enabled: ready && blocking && initialFocusRef !== false,\n  })\n\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\n    contentRef,\n    controlledMaxHeight,\n    footerEnabled: !!footer,\n    footerRef,\n    getSnapPoints,\n    headerEnabled: header !== false,\n    headerRef,\n    heightRef,\n    lastSnapRef,\n    ready,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\n  const maxHeightRef = useRef(maxHeight)\n  const minSnapRef = useRef(minSnap)\n  const maxSnapRef = useRef(maxSnap)\n  const findSnapRef = useRef(findSnap)\n  const defaultSnapRef = useRef(0)\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\n  useLayoutEffect(() => {\n    maxHeightRef.current = maxHeight\n    maxSnapRef.current = maxSnap\n    minSnapRef.current = minSnap\n    findSnapRef.current = findSnap\n    defaultSnapRef.current = findSnap(getDefaultSnap)\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\n\n  // New utility for using events safely\n  const asyncSet = useCallback(\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\n      new Promise((resolve) => {\n        return set({\n          ...opts,\n          config: {\n            velocity,\n            ...config,\n            // @see https://springs.pomb.us\n            mass: 1,\n            // \"stiffness\"\n            tension,\n            // \"damping\"\n            friction: Math.max(\n              friction,\n              friction + (friction - friction * velocity)\n            ),\n          },\n          onRest: (...args) => {\n            resolve(args)\n            onRest?.(...args)\n          },\n        })\n      }),\n    [set]\n  )\n  const [current, send] = useMachine(overlayMachine, {\n    devTools: debugging,\n    actions: {\n      onOpenCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapCancel: useCallback(\n        (context) =>\n          onSpringCancelRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onCloseCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeCancel: useCallback(\n        () =>\n          onSpringCancelRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n    },\n    context: { initialState },\n    services: {\n      onSnapStart: useCallback(\n        async (context, event) =>\n          onSpringStartRef.current?.({\n            type: 'SNAP',\n            source: event.payload.source || 'custom',\n          }),\n        []\n      ),\n      onOpenStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeStart: useCallback(\n        async () =>\n          onSpringStartRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        async (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        async () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      renderVisuallyHidden: useCallback(\n        async (context, event) => {\n          await asyncSet({\n            y: defaultSnapRef.current,\n            ready: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n            minSnap: defaultSnapRef.current,\n            immediate: true,\n          })\n        },\n        [asyncSet]\n      ),\n      activate: useCallback(\n        async (context, event) => {\n          canDragRef.current = true\n          await Promise.all([\n            scrollLockRef.current.activate(),\n            focusTrapRef.current.activate(),\n            ariaHiderRef.current.activate(),\n          ])\n        },\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\n      ),\n      deactivate: useCallback(async () => {\n        scrollLockRef.current.deactivate()\n        focusTrapRef.current.deactivate()\n        ariaHiderRef.current.deactivate()\n        canDragRef.current = false\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\n      openImmediately: useCallback(async () => {\n        heightRef.current = defaultSnapRef.current\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n      }, [asyncSet]),\n      openSmoothly: useCallback(async () => {\n        await asyncSet({\n          y: 0,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n\n        heightRef.current = defaultSnapRef.current\n\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: prefersReducedMotion.current,\n        })\n      }, [asyncSet, prefersReducedMotion]),\n      snapSmoothly: useCallback(\n        async (context, event) => {\n          const snap = findSnapRef.current(context.y)\n          heightRef.current = snap\n          lastSnapRef.current = snap\n          await asyncSet({\n            y: snap,\n            ready: 1,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            minSnap: minSnapRef.current,\n            immediate: prefersReducedMotion.current,\n            config: { velocity: context.velocity },\n          })\n        },\n        [asyncSet, lastSnapRef, prefersReducedMotion]\n      ),\n      resizeSmoothly: useCallback(async () => {\n        const snap = findSnapRef.current(heightRef.current)\n        heightRef.current = snap\n        lastSnapRef.current = snap\n        await asyncSet({\n          y: snap,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          minSnap: minSnapRef.current,\n          immediate:\n            resizeSourceRef.current === 'element'\n              ? prefersReducedMotion.current\n              : true,\n        })\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\n      closeSmoothly: useCallback(\n        async (context, event) => {\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\n          asyncSet({\n            minSnap: heightRef.current,\n            immediate: true,\n          })\n\n          heightRef.current = 0\n\n          await asyncSet({\n            y: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            immediate: prefersReducedMotion.current,\n          })\n\n          await asyncSet({ ready: 0, immediate: true })\n        },\n        [asyncSet, prefersReducedMotion]\n      ),\n    },\n  })\n\n  useEffect(() => {\n    if (!ready) return\n\n    if (_open) {\n      send('OPEN')\n    } else {\n      send('CLOSE')\n    }\n  }, [_open, send, ready])\n  useLayoutEffect(() => {\n    // Adjust the height whenever the snap points are changed due to resize events\n    if (maxHeight || maxSnap || minSnap) {\n      send('RESIZE')\n    }\n  }, [maxHeight, maxSnap, minSnap, send])\n  useEffect(\n    () => () => {\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\n      scrollLockRef.current.deactivate()\n      focusTrapRef.current.deactivate()\n      ariaHiderRef.current.deactivate()\n    },\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\n  )\n\n  useImperativeHandle(\n    forwardRef,\n    () => ({\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\n        send('SNAP', {\n          payload: {\n            y: findSnapRef.current(numberOrCallback),\n            velocity,\n            source,\n          },\n        })\n      },\n      get height() {\n        return heightRef.current\n      },\n    }),\n    [send]\n  )\n\n  useEffect(() => {\n    const elem = scrollRef.current\n\n    const preventScrolling = e => {\n      if (preventScrollingRef.current) {\n        e.preventDefault()\n      }\n    }\n\n    const preventSafariOverscroll = e => {\n      if (elem.scrollTop < 0) {\n        requestAnimationFrame(() => {\n          elem.style.overflow = 'hidden'\n          elem.scrollTop = 0\n          elem.style.removeProperty('overflow')\n        })\n        e.preventDefault()\n      }\n    }\n\n    if (expandOnContentDrag) {\n      elem.addEventListener('scroll', preventScrolling)\n      elem.addEventListener('touchmove', preventScrolling)\n      elem.addEventListener('touchstart', preventSafariOverscroll)\n    }\n    return () => {\n      elem.removeEventListener('scroll', preventScrolling)\n      elem.removeEventListener('touchmove', preventScrolling)\n      elem.removeEventListener('touchstart', preventSafariOverscroll)\n    }\n  }, [expandOnContentDrag, scrollRef])\n\n  const handleDrag = ({\n    args: [{ closeOnTap = false, isContentDragging = false } = {}] = [],\n    cancel,\n    direction: [, direction],\n    down,\n    first,\n    last,\n    // memo = spring.y.getValue() as number,\n    memo = spring.y.get() as number,\n    movement: [, _my],\n    tap,\n    velocity,\n  }) => {\n    const my = _my * -1\n\n    // Cancel the drag operation if the canDrag state changed\n    if (!canDragRef.current) {\n      console.log('handleDrag cancelled dragging because canDragRef is false')\n      cancel()\n      return memo\n    }\n\n    if (onDismiss && closeOnTap && tap) {\n      cancel()\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\n      setTimeout(() => onDismiss(), 0)\n      return memo\n    }\n\n    // Filter out taps\n    if (tap) {\n      return memo\n    }\n\n    const rawY = memo + my\n    const predictedDistance = my * velocity\n    const predictedY = Math.max(\n      minSnapRef.current,\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\n    )\n\n    if (\n      !down &&\n      onDismiss &&\n      direction > 0 &&\n      rawY + predictedDistance < minSnapRef.current / 2\n    ) {\n      cancel()\n      onDismiss()\n      return memo\n    }\n\n    let newY = down\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\n        !onDismiss && minSnapRef.current === maxSnapRef.current\n        ? rawY < minSnapRef.current\n          ? rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current,\n              maxSnapRef.current * 2,\n              0.55\n            )\n          : rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current / 2,\n              maxSnapRef.current,\n              0.55\n            )\n        : rubberbandIfOutOfBounds(\n            rawY,\n            onDismiss ? 0 : minSnapRef.current,\n            maxSnapRef.current,\n            0.55\n          )\n      : predictedY\n\n    if (expandOnContentDrag && isContentDragging) {\n      if (newY >= maxSnapRef.current) {\n        newY = maxSnapRef.current\n      }\n\n      if (memo === maxSnapRef.current && scrollRef.current.scrollTop > 0) {\n        newY = maxSnapRef.current\n      }\n\n      preventScrollingRef.current = newY < maxSnapRef.current;\n    } else {\n      preventScrollingRef.current = false\n    }\n\n    if (first) {\n      send('DRAG')\n    }\n\n    if (last) {\n      send('SNAP', {\n        payload: {\n          y: newY,\n          velocity: velocity > 0.05 ? velocity : 1,\n          source: 'dragging',\n        },\n      })\n\n      return memo\n    }\n\n    // @TODO too many rerenders\n    //send('DRAG', { y: newY, velocity })\n    //*\n    set({\n      y: newY,\n      ready: 1,\n      maxHeight: maxHeightRef.current,\n      maxSnap: maxSnapRef.current,\n      minSnap: minSnapRef.current,\n      immediate: true,\n      config: { velocity },\n    })\n    // */\n\n    return memo\n  }\n\n  const bind = useDrag(handleDrag, {\n    filterTaps: true,\n  })\n\n  if (Number.isNaN(maxSnapRef.current)) {\n    throw new TypeError('maxSnapRef is NaN!!')\n  }\n  if (Number.isNaN(minSnapRef.current)) {\n    throw new TypeError('minSnapRef is NaN!!')\n  }\n\n  const interpolations = useSpringInterpolations({ spring })\n\n  return (\n    <animated.div\n      {...props}\n      data-rsbs-root\n      data-rsbs-state={publicStates.find(current.matches)}\n      data-rsbs-is-blocking={blocking}\n      data-rsbs-is-dismissable={!!onDismiss}\n      data-rsbs-has-header={!!header}\n      data-rsbs-has-footer={!!footer}\n      className={className}\n      ref={containerRef}\n      style={{\n        // spread in the interpolations yeees\n        ...interpolations,\n        // but allow overriding them/disabling them\n        ...style,\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\n        // @TODO the line below only fails on TS <4\n        // @ts-ignore\n        opacity: spring.ready,\n      }}\n    >\n      {sibling}\n      {blocking && (\n        <div\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\n          // that clips this element to the container, not allowing it to cover the full page.\n          key=\"backdrop\"\n          data-rsbs-backdrop\n          {...bind({ closeOnTap: true })}\n        />\n      )}\n      <div\n        key=\"overlay\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        data-rsbs-overlay\n        tabIndex={-1}\n        ref={overlayRef}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\n            event.stopPropagation()\n            if (onDismiss) onDismiss()\n          }\n        }}\n      >\n        {header !== false && (\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\n            {header}\n          </div>\n        )}\n        <div key=\"scroll\" data-rsbs-scroll ref={scrollRef} {...(expandOnContentDrag ? bind({ isContentDragging: true }) : {})}>\n          <div data-rsbs-content ref={contentRef}>\n            {children}\n          </div>\n        </div>\n        {footer && (\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </animated.div>\n  )\n})\n\n// Used for the data attribute, list over states available to CSS selectors\nconst publicStates = [\n  'closed',\n  'opening',\n  'open',\n  'closing',\n  'dragging',\n  'snapping',\n  'resizing',\n]\n\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\n  return lastSnap ?? Math.min(...snapPoints)\n}\nfunction _snapPoints({ minHeight }: SnapPointProps) {\n  return minHeight\n}\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\n\nimport { useCallback, useEffect, useState } from 'react'\n\nexport function useReady() {\n  const [ready, setReady] = useState(false)\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\n\n  const registerReady = useCallback((key: string) => {\n    console.count(`registerReady:${key}`)\n    // Register the check we're gonna wait for until it's ready\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\n\n    return () => {\n      console.count(`setReady:${key}`)\n      // Set it to ready\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\n    }\n  }, [])\n\n  useEffect(() => {\n    const states = Object.values(readyMap)\n\n    if (states.length === 0) {\n      console.log('nope nothing registered yet')\n      return\n    }\n\n    const isReady = states.every(Boolean)\n    console.log('check if we are rready', readyMap, isReady)\n    if (isReady) {\n      console.warn('ready!')\n      setReady(true)\n    }\n  }, [readyMap])\n\n  return { ready, registerReady }\n}\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\n\n// @TODO refactor to addEventListener\nexport function useReducedMotion() {\n  const mql = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\n        : null,\n    []\n  )\n  const ref = useRef(mql?.matches)\n\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\n\n  useEffect(() => {\n    const handler = (event) => {\n      ref.current = event.matches\n    }\n    mql?.addListener(handler)\n\n    return () => mql?.removeListener(handler)\n  }, [mql])\n\n  return ref\n}\n","import { useSpring as useReactSpring } from '@react-spring/web'\n\n// Behold, the engine of it all!\n// Put in this file befause it makes it easier to type and I'm lazy! :D\n\nexport function useSpring() {\n  return useReactSpring(() => ({\n    y: 0,\n    ready: 0,\n    maxHeight: 0,\n    minSnap: 0,\n    maxSnap: 0,\n  }))\n}\n\nexport type Spring = ReturnType<typeof useSpring>[0]\nexport type SpringSet = ReturnType<typeof useSpring>[1]\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\n/**\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\n *\n * On iOS the following may happen if scroll isn't locked:\n * - When dragging the sheet the background gets dragged at the same time.\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\n *\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\n * the bottom sheet drag interaction.\n */\nexport function useScrollLock({\n  targetRef,\n  enabled,\n  reserveScrollBarGap,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n  reserveScrollBarGap: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate scroll lock too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n        disableBodyScroll(target, {\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\n          reserveScrollBarGap,\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n        enableBodyScroll(target)\n      },\n    }\n  }, [enabled, targetRef, reserveScrollBarGap])\n\n  return ref\n}\n","import React, { useDebugValue, useEffect, useRef } from 'react'\n\n// Handle hiding and restoring aria-hidden attributes\nexport function useAriaHider({\n  targetRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate aria hider too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n    let originalValues: (null | string)[] = []\n    let rootNodes: Element[] = []\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n\n        const parentNode = target.parentNode\n\n        document.querySelectorAll('body > *').forEach((node) => {\n          if (node === parentNode) {\n            return\n          }\n          let attr = node.getAttribute('aria-hidden')\n          let alreadyHidden = attr !== null && attr !== 'false'\n          if (alreadyHidden) {\n            return\n          }\n          originalValues.push(attr)\n          rootNodes.push(node)\n          node.setAttribute('aria-hidden', 'true')\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        rootNodes.forEach((node, index) => {\n          let originalValue = originalValues[index]\n          if (originalValue === null) {\n            node.removeAttribute('aria-hidden')\n          } else {\n            node.setAttribute('aria-hidden', originalValue)\n          }\n        })\n        originalValues = []\n        rootNodes = []\n      },\n    }\n  }, [targetRef, enabled])\n\n  return ref\n}\n","import { createFocusTrap } from 'focus-trap'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\nexport function useFocusTrap({\n  targetRef,\n  fallbackRef,\n  initialFocusRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<HTMLElement>\n  fallbackRef: React.RefObject<HTMLElement>\n  initialFocusRef?: React.RefObject<HTMLElement>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate focus trap too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const fallback = fallbackRef.current\n    const trap = createFocusTrap(targetRef.current, {\n      onActivate:\n        process.env.NODE_ENV !== 'production'\n          ? () => {\n              console.log('focus activate')\n            }\n          : undefined,\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\n      initialFocus: initialFocusRef\n        ? () => initialFocusRef?.current || fallback\n        : undefined,\n      fallbackFocus: fallback,\n      escapeDeactivates: false,\n      clickOutsideDeactivates: false,\n    })\n    let active = false\n\n    ref.current = {\n      activate: async () => {\n        if (active) return\n        active = true\n\n        await trap.activate()\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        trap.deactivate()\n      },\n    }\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\n\n  return ref\n}\n","import { interpolate, to } from '@react-spring/web'\nimport type { Spring } from './useSpring'\nimport { clamp } from '../utils'\n\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\n// putting them here, in their own closure with explicitly defined variables used\n\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\n// so it's important that if anything can change outside of render that needs to be available\n// in the interpolation then a ref must be used\n\nexport function useSpringInterpolations({\n  spring,\n}: {\n  spring: Spring\n}): React.CSSProperties {\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\n  const interpolateBorderRadius = to(\n    [spring.y, spring.maxHeight],\n    (y, maxHeight) => {\n      return `${Math.round(clamp(maxHeight - y, 0, 16))}px`\n    }\n  )\n\n  /*\n   * Only animate the height when absolute necessary\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\n   *       but it should be possible to do it in other scenarios too, like on window resize,\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\n   */\n  const interpolateHeight = to(\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\n  )\n\n  const interpolateY = to(\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => {\n      if (y < minSnap) {\n        return `${minSnap - y}px`\n      }\n      if (y > maxSnap) {\n        return `${maxSnap - y}px`\n      }\n      return '0px'\n    }\n  )\n\n  const interpolateFiller = to(\n    [spring.y, spring.maxSnap],\n    (y, maxSnap) => {\n      if (y >= maxSnap) {\n        return Math.ceil(y - maxSnap)\n      }\n      return 0\n    }\n  )\n\n  const interpolateContentOpacity = to(\n    [spring.y, spring.minSnap],\n    (y, minSnap) => {\n      if (!minSnap) {\n        return 0\n      }\n      const minX = Math.max(minSnap / 2 - 45, 0)\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\n      const minY = 0\n      const maxY = 1\n\n      const slope = (maxY - minY) / (maxX - minX)\n      const res = (y - minX) * (slope + minY)\n      return clamp(res, 0, 1)\n    }\n  )\n\n  const interpolateBackdrop = to(\n    [spring.y, spring.minSnap],\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\n  )\n\n  return {\n    // Fancy content fade-in effect\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\n    // Fading in the backdrop\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\n    // Scaling the antigap in the bottom\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\n    // Remove rounded borders when full height, it looks much better this way\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\n  }\n}\n","/* eslint-disable react/jsx-pascal-case */\nimport { Portal } from '@reach/portal'\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\nimport type { Props, RefHandles, SpringEvent } from './types'\nimport { useLayoutEffect } from './hooks'\n\nexport type {\n  RefHandles as BottomSheetRef,\n  Props as BottomSheetProps,\n} from './types'\n\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\nexport const BottomSheet = forwardRef<RefHandles, Props>(function BottomSheet(\n  { onSpringStart, onSpringEnd, skipInitialTransition, ...props },\n  ref\n) {\n  // Mounted state, helps SSR but also ensures you can't tab into the sheet while it's closed, or nav there in a screen reader\n  const [mounted, setMounted] = useState(false)\n  const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\n  // The last point that the user snapped to, useful for open/closed toggling and the user defined height is remembered\n  const lastSnapRef = useRef(null)\n  // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\n  // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\n  // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\n  // It's only when initialState and props.open is mismatching that a intial transition should happen\n  // If they match then transitions will only happen when a user interaction or resize event happen.\n  const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\n    skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\n  )\n\n  // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\n  useLayoutEffect(() => {\n    if (props.open) {\n      cancelAnimationFrame(timerRef.current)\n      setMounted(true)\n\n      // Cleanup defaultOpen state on close\n      return () => {\n        initialStateRef.current = 'CLOSED'\n      }\n    }\n  }, [props.open])\n\n  const handleSpringStart = useCallback(\n    async function handleSpringStart(event: SpringEvent) {\n      // Forward the event\n      await onSpringStart?.(event)\n\n      if (event.type === 'OPEN') {\n        // Ensures that when it's opening we abort any pending unmount action\n        cancelAnimationFrame(timerRef.current)\n      }\n    },\n    [onSpringStart]\n  )\n\n  const handleSpringEnd = useCallback(\n    async function handleSpringEnd(event: SpringEvent) {\n      // Forward the event\n      await onSpringEnd?.(event)\n\n      if (event.type === 'CLOSE') {\n        // Unmount from the dom to avoid contents being tabbable or visible to screen readers while closed\n        timerRef.current = requestAnimationFrame(() => setMounted(false))\n      }\n    },\n    [onSpringEnd]\n  )\n\n  // This isn't just a performance optimization, it's also to avoid issues when running a non-browser env like SSR\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Portal data-rsbs-portal>\n      <_BottomSheet\n        {...props}\n        lastSnapRef={lastSnapRef}\n        ref={ref}\n        initialState={initialStateRef.current}\n        onSpringStart={handleSpringStart}\n        onSpringEnd={handleSpringEnd}\n      />\n    </Portal>\n  )\n})\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","roundAndCheckForNaN","unrounded","rounded","Math","round","Number","isNaN","observerOptions","box","useElementSizeObserver","ref","_ref3","label","enabled","resizeSourceRef","_useState","useState","size","setSize","useDebugValue","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","createMachine","id","initial","context","initialState","snapSource","undefined","states","closed","on","OPEN","CLOSE","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","_extends","smoothly","visuallyHidden","end","done","type","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","e","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onRezizeEnd","services","onSnapStart","then","reject","onOpenStart","onCloseStart","onResizeStart","onCloseEnd","onResizeEnd","renderVisuallyHidden","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","_ref2","initiallyOpen","_ref","_config$default","config","default","tension","friction","BottomSheet","React","forwardRef","children","sibling","className","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","controlledMaxHeight","maxHeight","_ref$defaultSnap","defaultSnap","getDefaultSnap","_defaultSnap","_ref$snapPoints","snapPoints","getSnapPoints","_snapPoints","_ref$blocking","blocking","_ref$scrollLocking","scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","_ref$reserveScrollBar","reserveScrollBarGap","_ref$expandOnContentD","expandOnContentDrag","props","_objectWithoutPropertiesLoose","_excluded","_useReady","ready","setReady","_useState2","readyMap","updateReadyMap","registerReady","key","_extends2","_extends3","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","mql","_useSpring","useReactSpring","minSnap","maxSnap","spring","set","containerRef","scrollRef","contentRef","headerRef","footerRef","overlayRef","heightRef","preventScrollingRef","prefersReducedMotion","useMemo","matchMedia","matches","handler","addListener","removeListener","scrollLockRef","targetRef","TypeError","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","useScrollLock","ariaHiderRef","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","useAriaHider","focusTrapRef","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","_useSnapPoints","_useDimensions","footerEnabled","headerEnabled","innerHeight","setMaxHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","headerHeight","contentHeight","footerHeight","minHeight","min","useDimensions","_processSnapPoints","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","apply","max","processSnapPoints","height","findSnap","numberOrCallback","querySnap","lastSnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","asyncSet","onRest","_ref2$config","_ref2$config2","_ref2$config2$velocit","_excluded2","opts","_excluded3","mass","args","slice","call","arguments","_useMachine","useMachine","devTools","immediate","all","snap","send","useImperativeHandle","snapTo","_temp","_ref3$velocity","_ref3$source","elem","preventScrolling","preventDefault","preventSafariOverscroll","scrollTop","overflow","removeProperty","bind","useDrag","_ref4","_ref4$args","_ref4$args2$","_ref4$args2$2","_ref4$args2$2$closeOn","closeOnTap","_ref4$args2$2$isConte","isContentDragging","cancel","direction","down","first","last","_ref4$memo","memo","get","tap","my","movement","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","interpolations","interpolateBorderRadius","to","interpolateHeight","interpolateY","interpolateFiller","ceil","interpolateContentOpacity","minX","interpolateBackdrop","useSpringInterpolations","createElement","animated","div","publicStates","find","opacity","role","tabIndex","onKeyDown","stopPropagation","_ref5","_ref6","skipInitialTransition","mounted","setMounted","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","_BottomSheet"],"mappings":"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"}