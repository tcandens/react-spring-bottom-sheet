{"version":3,"file":"index.modern.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useSpring.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\n\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\nexport const useLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\n","/* eslint-disable no-self-compare */\n\n// stolen from lodash\nexport function clamp(number: number, lower: number, upper: number) {\n  number = +number\n  lower = +lower\n  upper = +upper\n  lower = lower === lower ? lower : 0\n  upper = upper === upper ? upper : 0\n  if (number === number) {\n    number = number <= upper ? number : upper\n    number = number >= lower ? number : lower\n  }\n  return number\n}\n\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\nexport function deleteNaN(arr) {\n  const set = new Set(arr)\n  set.delete(NaN)\n  return [...set]\n}\n\nexport function roundAndCheckForNaN(unrounded) {\n  const rounded = Math.round(unrounded)\n  if (Number.isNaN(rounded)) {\n    return null\n  }\n\n  return rounded\n}\n\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\n\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\n    acc.add(clamp(snapPoint, 0, maxHeight))\n    return acc\n  }, new Set<number>())\n\n  const snapPoints = Array.from(snapPointsDedupedSet)\n\n  const minSnap = Math.min(...snapPoints)\n  if (Number.isNaN(minSnap)) {\n    throw new TypeError('minSnap is NaN')\n  }\n  const maxSnap = Math.max(...snapPoints)\n  if (Number.isNaN(maxSnap)) {\n    throw new TypeError('maxSnap is NaN')\n  }\n\n  return {\n    snapPoints,\n    minSnap,\n    maxSnap,\n  }\n}\n\nexport const debugging =\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\n    ? window.location.search === '?debug'\n    : false\n","import React, {\n  useCallback,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\nimport { useReady } from './useReady'\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\nimport { useLayoutEffect } from './useLayoutEffect'\n\nexport function useSnapPoints({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  getSnapPoints,\n  headerEnabled,\n  headerRef,\n  heightRef,\n  lastSnapRef,\n  ready,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  getSnapPoints: snapPoints\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  heightRef: React.RefObject<number>\n  lastSnapRef: React.RefObject<number>\n  ready: boolean\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\n    contentRef: contentRef,\n    controlledMaxHeight,\n    footerEnabled,\n    footerRef,\n    headerEnabled,\n    headerRef,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\n    ready\n      ? getSnapPoints({\n          height: heightRef.current,\n          footerHeight,\n          headerHeight,\n          minHeight,\n          maxHeight,\n        })\n      : [0],\n    maxHeight\n  )\n  //console.log({ snapPoints, minSnap, maxSnap })\n\n  // @TODO investigate the gains from memoizing this\n  function findSnap(\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\n  ) {\n    let unsafeSearch: number\n    if (typeof numberOrCallback === 'function') {\n      unsafeSearch = numberOrCallback({\n        footerHeight,\n        headerHeight,\n        height: heightRef.current,\n        minHeight,\n        maxHeight,\n        snapPoints,\n        lastSnap: lastSnapRef.current,\n      })\n    } else {\n      unsafeSearch = numberOrCallback\n    }\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\n    return snapPoints.reduce(\n      (prev, curr) =>\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\n      minSnap\n    )\n  }\n\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\n\n  return { minSnap, maxSnap, findSnap, maxHeight }\n}\n\nfunction useDimensions({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  headerEnabled,\n  headerRef,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const setReady = useMemo(() => registerReady('contentHeight'), [\n    registerReady,\n  ])\n  const maxHeight = useMaxHeight(\n    controlledMaxHeight,\n    registerReady,\n    resizeSourceRef\n  )\n\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\n  const headerHeight = useElementSizeObserver(headerRef, {\n    label: 'headerHeight',\n    enabled: headerEnabled,\n    resizeSourceRef,\n  })\n  const contentHeight = useElementSizeObserver(contentRef, {\n    label: 'contentHeight',\n    enabled: true,\n    resizeSourceRef,\n  })\n  const footerHeight = useElementSizeObserver(footerRef, {\n    label: 'footerHeight',\n    enabled: footerEnabled,\n    resizeSourceRef,\n  })\n  const minHeight =\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\n    headerHeight +\n    footerHeight\n\n  useDebugValue(`minHeight: ${minHeight}`)\n\n  const ready = contentHeight > 0\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  return {\n    maxHeight,\n    minHeight,\n    headerHeight,\n    footerHeight,\n  }\n}\n\nconst observerOptions: ResizeObserverOptions = {\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\n  // And the user hides or shows the Safari browser toolbar\n  box: 'border-box',\n}\n/**\n * Hook for determining the size of an element using the Resize Observer API.\n *\n * @param ref - A React ref to an element\n */\nfunction useElementSizeObserver(\n  ref: React.RefObject<Element>,\n  {\n    label,\n    enabled,\n    resizeSourceRef,\n  }: {\n    label: string\n    enabled: boolean\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\n  }\n): number {\n  let [size, setSize] = useState(0)\n\n  useDebugValue(`${label}: ${size}`)\n\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      // we only observe one element, so accessing the first entry here is fine\n      setSize(entries[0].borderBoxSize[0].blockSize)\n      resizeSourceRef.current = 'element'\n    },\n    [resizeSourceRef]\n  )\n\n  useLayoutEffect(() => {\n    if (!ref.current || !enabled) {\n      return\n    }\n\n    const resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(ref.current, observerOptions)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [ref, handleResize, enabled])\n\n  return enabled ? size : 0\n}\n\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\nfunction useMaxHeight(\n  controlledMaxHeight,\n  registerReady: ReturnType<typeof useReady>['registerReady'],\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n) {\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\n  const [maxHeight, setMaxHeight] = useState(() =>\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\n      ? window.innerHeight\n      : 0\n  )\n  const ready = maxHeight > 0\n  const raf = useRef(0)\n\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\n\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  useLayoutEffect(() => {\n    // Bail if the max height is a controlled prop\n    if (controlledMaxHeight) {\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\n      resizeSourceRef.current = 'maxheightprop'\n\n      return\n    }\n\n    const handleResize = () => {\n      if (raf.current) {\n        // bail to throttle the amount of resize changes\n        return\n      }\n\n      // throttle state changes using rAF\n      raf.current = requestAnimationFrame(() => {\n        setMaxHeight(window.innerHeight)\n        resizeSourceRef.current = 'window'\n\n        raf.current = 0\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    setMaxHeight(window.innerHeight)\n    resizeSourceRef.current = 'window'\n    setReady()\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      cancelAnimationFrame(raf.current)\n    }\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\n\n  return maxHeight\n}\n","import { createMachine, assign } from 'xstate'\n\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\n\n// interface OverlayStateSchema {\n//   states: {\n//     // the overlay usually starts in the closed position\n//     closed: {}\n//     opening: {\n//       states: {\n//         // Used to fire off the springStart event\n//         start: {}\n//         // Decide how to transition to the open state based on what the initialState is\n//         transition: {}\n//         // Fast enter animation, sheet is open by default\n//         immediately: {\n//           states: {\n//             open: {}\n//             activating: {}\n//           }\n//         }\n//         smoothly: {\n//           states: {\n//             // This state only happens when the overlay should start in an open state, instead of animating from the bottom\n//             // openImmediately: {}\n//             // visuallyHidden will render the overlay in the open state, but with opacity 0\n//             // doing this solves two problems:\n//             // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\n//             // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\n//             // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\n//             // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\n//             visuallyHidden: {}\n//             // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\n//             // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\n//             activating: {}\n//             // Animates from the bottom\n//             open: {}\n//           }\n//         }\n//         // Used to fire off the springEnd event\n//         end: {}\n//         // And finally we're ready to transition to open\n//         done: {}\n//       }\n//     }\n//     open: {}\n//     // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\n//     // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\n//     // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\n//     // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\n//     dragging: {}\n//     // snapping happens whenever transitioning to a new snap point, often after dragging\n//     snapping: {\n//       states: {\n//         start: {}\n//         snappingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//     resizing: {\n//       states: {\n//         start: {}\n//         resizingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//     closing: {\n//       states: {\n//         start: {}\n//         deactivating: {}\n//         closingSmoothly: {}\n//         end: {}\n//         done: {}\n//       }\n//     }\n//   }\n// }\n\ntype OverlayEvent =\n  | { type: 'OPEN' }\n  | {\n      type: 'SNAP'\n      payload: {\n        y: number\n        velocity: number\n        source: 'dragging' | 'custom' | string\n      }\n    }\n  | { type: 'CLOSE' }\n  | { type: 'DRAG' }\n  | { type: 'RESIZE' }\n\n// The context (extended state) of the machine\ninterface OverlayContext {\n  initialState: 'OPEN' | 'CLOSED'\n  snapSource: string\n}\nfunction sleep(ms = 1000) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nconst cancelOpen = {\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\n}\nconst openToDrag = {\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\n}\nconst openToResize = {\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\n}\n\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\n\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\n\nexport const overlayMachine = createMachine<OverlayContext, OverlayEvent>(\n  {\n    id: 'overlay',\n    initial: 'closed',\n    context: { \n      initialState: 'CLOSED',\n      snapSource: undefined,\n    },\n    states: {\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\n      opening: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onOpenStart',\n              onDone: 'transition',\n            },\n          },\n          transition: {\n            always: [\n              { target: 'immediately', cond: 'initiallyOpen' },\n              { target: 'smoothly', cond: 'initiallyClosed' },\n            ],\n          },\n          immediately: {\n            initial: 'open',\n            states: {\n              open: {\n                invoke: { src: 'openImmediately', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          smoothly: {\n            initial: 'visuallyHidden',\n            states: {\n              visuallyHidden: {\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: 'open' },\n              },\n              open: {\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          end: {\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\n          },\n          done: {\n            type: 'final',\n          },\n        },\n        on: { ...cancelOpen },\n        onDone: 'open',\n      },\n      open: {\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\n      },\n      dragging: {\n        on: { SNAP: 'snapping' },\n      },\n      snapping: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onSnapStart',\n              onDone: 'snappingSmoothly',\n            },\n            entry: [\n              assign({\n                // @ts-expect-error\n                y: (_, { payload: { y } }) => y,\n                velocity(_, e) {\n                  if (e.type === 'SNAP') return e.payload.velocity\n                },\n                snapSource(_, e) {\n                  if (e.type === 'SNAP') return e.payload.source || 'custom'\n                }\n              }),\n            ],\n          },\n          snappingSmoothly: {\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\n            on: {\n              RESIZE: '#overlay.resizing',\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\n        },\n        onDone: 'open',\n      },\n      resizing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onResizeStart',\n              onDone: 'resizingSmoothly',\n            },\n          },\n          resizingSmoothly: {\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\n            on: {\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\n        },\n        onDone: 'open',\n      },\n      closing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onCloseStart',\n              onDone: 'deactivating',\n            },\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\n          },\n          deactivating: {\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\n          },\n          closingSmoothly: {\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\n            on: {\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          CLOSE: undefined,\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n        },\n        onDone: 'closed',\n      },\n    },\n    on: {\n      CLOSE: 'closing',\n    },\n  },\n  {\n    actions: {\n      onOpenCancel: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapCancel: (context, event) => {\n        console.log('onSnapCancel', { context, event })\n      },\n      onResizeCancel: (context, event) => {\n        console.log('onResizeCancel', { context, event })\n      },\n      onCloseCancel: (context, event) => {\n        console.log('onCloseCancel', { context, event })\n      },\n      onOpenEnd: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapEnd: (context, event) => {\n        console.log('onSnapEnd', { context, event })\n      },\n      onRezizeEnd: (context, event) => {\n        console.log('onRezizeEnd', { context, event })\n      },\n    },\n    services: {\n      onSnapStart: async () => {\n        await sleep()\n      },\n      onOpenStart: async () => {\n        await sleep()\n      },\n      onCloseStart: async () => {\n        await sleep()\n      },\n      onResizeStart: async () => {\n        await sleep()\n      },\n      onSnapEnd: async () => {\n        await sleep()\n      },\n      onOpenEnd: async () => {\n        await sleep()\n      },\n      onCloseEnd: async () => {\n        await sleep()\n      },\n      onResizeEnd: async () => {\n        await sleep()\n      },\n      renderVisuallyHidden: async (context, event) => {\n        console.group('renderVisuallyHidden')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      activate: async (context, event) => {\n        console.group('activate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      deactivate: async (context, event) => {\n        console.group('deactivate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openSmoothly: async (context, event) => {\n        console.group('openSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openImmediately: async (context, event) => {\n        console.group('openImmediately')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      snapSmoothly: async (context, event) => {\n        console.group('snapSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      resizeSmoothly: async (context, event) => {\n        console.group('resizeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      closeSmoothly: async (context, event) => {\n        console.group('closeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n    },\n    guards: { initiallyClosed, initiallyOpen },\n  }\n)\n","//\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\n// can be reclaimed after the sheet is closed and then unmounted.\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\n// cause race conditions.\n\nimport { useMachine } from '@xstate/react'\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { animated, config } from '@react-spring/web'\nimport { rubberbandIfOutOfBounds, useDrag } from '@use-gesture/react'\nimport {\n  useAriaHider,\n  useFocusTrap,\n  useLayoutEffect,\n  useReady,\n  useReducedMotion,\n  useScrollLock,\n  useSnapPoints,\n  useSpring,\n  useSpringInterpolations,\n} from './hooks'\nimport { overlayMachine } from './machines/overlay'\nimport type {\n  defaultSnapProps,\n  Props,\n  RefHandles,\n  ResizeSource,\n  SnapPointProps,\n} from './types'\nimport { debugging } from './utils'\n\nconst { tension, friction } = config.default\n\n// @TODO implement AbortController to deal with race conditions\n\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\nexport const BottomSheet = React.forwardRef<\n  RefHandles,\n  {\n    initialState: 'OPEN' | 'CLOSED'\n    lastSnapRef: React.MutableRefObject<number | null>\n  } & Props\n>(function BottomSheetInternal(\n  {\n    children,\n    sibling,\n    className,\n    footer,\n    header,\n    open: _open,\n    initialState,\n    lastSnapRef,\n    initialFocusRef,\n    onDismiss,\n    maxHeight: controlledMaxHeight,\n    defaultSnap: getDefaultSnap = _defaultSnap,\n    snapPoints: getSnapPoints = _snapPoints,\n    blocking = true,\n    scrollLocking = true,\n    style,\n    onSpringStart,\n    onSpringCancel,\n    onSpringEnd,\n    reserveScrollBarGap = blocking,\n    expandOnContentDrag = false,\n    ...props\n  },\n  forwardRef\n) {\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\n  // @TODO make ready its own state perhaps, before open or closed\n  const { ready, registerReady } = useReady()\n\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\n  const canDragRef = useRef(false)\n\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\n  const onSpringStartRef = useRef(onSpringStart)\n  const onSpringCancelRef = useRef(onSpringCancel)\n  const onSpringEndRef = useRef(onSpringEnd)\n  useEffect(() => {\n    onSpringStartRef.current = onSpringStart\n    onSpringCancelRef.current = onSpringCancel\n    onSpringEndRef.current = onSpringEnd\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\n\n  // Behold, the engine of it all!\n  const [spring, set] = useSpring()\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const headerRef = useRef<HTMLDivElement>(null)\n  const footerRef = useRef<HTMLDivElement>(null)\n  const overlayRef = useRef<HTMLDivElement | null>(null)\n\n  // Keeps track of the current height, or the height transitioning to\n  const heightRef = useRef(0)\n  const resizeSourceRef = useRef<ResizeSource>()\n  const preventScrollingRef = useRef(false)\n\n  const prefersReducedMotion = useReducedMotion()\n\n  // \"Plugins\" huhuhu\n  const scrollLockRef = useScrollLock({\n    targetRef: scrollRef,\n    enabled: ready && scrollLocking,\n    reserveScrollBarGap,\n  })\n  const ariaHiderRef = useAriaHider({\n    targetRef: containerRef,\n    enabled: ready && blocking,\n  })\n  const focusTrapRef = useFocusTrap({\n    targetRef: containerRef,\n    fallbackRef: overlayRef,\n    initialFocusRef: initialFocusRef || undefined,\n    enabled: ready && blocking && initialFocusRef !== false,\n  })\n\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\n    contentRef,\n    controlledMaxHeight,\n    footerEnabled: !!footer,\n    footerRef,\n    getSnapPoints,\n    headerEnabled: header !== false,\n    headerRef,\n    heightRef,\n    lastSnapRef,\n    ready,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\n  const maxHeightRef = useRef(maxHeight)\n  const minSnapRef = useRef(minSnap)\n  const maxSnapRef = useRef(maxSnap)\n  const findSnapRef = useRef(findSnap)\n  const defaultSnapRef = useRef(0)\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\n  useLayoutEffect(() => {\n    maxHeightRef.current = maxHeight\n    maxSnapRef.current = maxSnap\n    minSnapRef.current = minSnap\n    findSnapRef.current = findSnap\n    defaultSnapRef.current = findSnap(getDefaultSnap)\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\n\n  // New utility for using events safely\n  const asyncSet = useCallback(\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\n      new Promise((resolve) => {\n        return set({\n          ...opts,\n          config: {\n            velocity,\n            ...config,\n            // @see https://springs.pomb.us\n            mass: 1,\n            // \"stiffness\"\n            tension,\n            // \"damping\"\n            friction: Math.max(\n              friction,\n              friction + (friction - friction * velocity)\n            ),\n          },\n          onRest: (...args) => {\n            resolve(args)\n            onRest?.(...args)\n          },\n        })\n      }),\n    [set]\n  )\n  const [current, send] = useMachine(overlayMachine, {\n    devTools: debugging,\n    actions: {\n      onOpenCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapCancel: useCallback(\n        (context) =>\n          onSpringCancelRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onCloseCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeCancel: useCallback(\n        () =>\n          onSpringCancelRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n    },\n    context: { initialState },\n    services: {\n      onSnapStart: useCallback(\n        async (context, event) =>\n          onSpringStartRef.current?.({\n            type: 'SNAP',\n            source: event.payload.source || 'custom',\n          }),\n        []\n      ),\n      onOpenStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeStart: useCallback(\n        async () =>\n          onSpringStartRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        async (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        async () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      renderVisuallyHidden: useCallback(\n        async (context, event) => {\n          await asyncSet({\n            y: defaultSnapRef.current,\n            ready: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n            minSnap: defaultSnapRef.current,\n            immediate: true,\n          })\n        },\n        [asyncSet]\n      ),\n      activate: useCallback(\n        async (context, event) => {\n          canDragRef.current = true\n          await Promise.all([\n            scrollLockRef.current.activate(),\n            focusTrapRef.current.activate(),\n            ariaHiderRef.current.activate(),\n          ])\n        },\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\n      ),\n      deactivate: useCallback(async () => {\n        scrollLockRef.current.deactivate()\n        focusTrapRef.current.deactivate()\n        ariaHiderRef.current.deactivate()\n        canDragRef.current = false\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\n      openImmediately: useCallback(async () => {\n        heightRef.current = defaultSnapRef.current\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n      }, [asyncSet]),\n      openSmoothly: useCallback(async () => {\n        await asyncSet({\n          y: 0,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n\n        heightRef.current = defaultSnapRef.current\n\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: prefersReducedMotion.current,\n        })\n      }, [asyncSet, prefersReducedMotion]),\n      snapSmoothly: useCallback(\n        async (context, event) => {\n          const snap = findSnapRef.current(context.y)\n          heightRef.current = snap\n          lastSnapRef.current = snap\n          await asyncSet({\n            y: snap,\n            ready: 1,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            minSnap: minSnapRef.current,\n            immediate: prefersReducedMotion.current,\n            config: { velocity: context.velocity },\n          })\n        },\n        [asyncSet, lastSnapRef, prefersReducedMotion]\n      ),\n      resizeSmoothly: useCallback(async () => {\n        const snap = findSnapRef.current(heightRef.current)\n        heightRef.current = snap\n        lastSnapRef.current = snap\n        await asyncSet({\n          y: snap,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          minSnap: minSnapRef.current,\n          immediate:\n            resizeSourceRef.current === 'element'\n              ? prefersReducedMotion.current\n              : true,\n        })\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\n      closeSmoothly: useCallback(\n        async (context, event) => {\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\n          asyncSet({\n            minSnap: heightRef.current,\n            immediate: true,\n          })\n\n          heightRef.current = 0\n\n          await asyncSet({\n            y: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            immediate: prefersReducedMotion.current,\n          })\n\n          await asyncSet({ ready: 0, immediate: true })\n        },\n        [asyncSet, prefersReducedMotion]\n      ),\n    },\n  })\n\n  useEffect(() => {\n    if (!ready) return\n\n    if (_open) {\n      send('OPEN')\n    } else {\n      send('CLOSE')\n    }\n  }, [_open, send, ready])\n  useLayoutEffect(() => {\n    // Adjust the height whenever the snap points are changed due to resize events\n    if (maxHeight || maxSnap || minSnap) {\n      send('RESIZE')\n    }\n  }, [maxHeight, maxSnap, minSnap, send])\n  useEffect(\n    () => () => {\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\n      scrollLockRef.current.deactivate()\n      focusTrapRef.current.deactivate()\n      ariaHiderRef.current.deactivate()\n    },\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\n  )\n\n  useImperativeHandle(\n    forwardRef,\n    () => ({\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\n        send('SNAP', {\n          payload: {\n            y: findSnapRef.current(numberOrCallback),\n            velocity,\n            source,\n          },\n        })\n      },\n      get height() {\n        return heightRef.current\n      },\n    }),\n    [send]\n  )\n\n  useEffect(() => {\n    const elem = scrollRef.current\n\n    const preventScrolling = e => {\n      if (preventScrollingRef.current) {\n        e.preventDefault()\n      }\n    }\n\n    const preventSafariOverscroll = e => {\n      if (elem.scrollTop < 0) {\n        requestAnimationFrame(() => {\n          elem.style.overflow = 'hidden'\n          elem.scrollTop = 0\n          elem.style.removeProperty('overflow')\n        })\n        e.preventDefault()\n      }\n    }\n\n    if (expandOnContentDrag) {\n      elem.addEventListener('scroll', preventScrolling)\n      elem.addEventListener('touchmove', preventScrolling)\n      elem.addEventListener('touchstart', preventSafariOverscroll)\n    }\n    return () => {\n      elem.removeEventListener('scroll', preventScrolling)\n      elem.removeEventListener('touchmove', preventScrolling)\n      elem.removeEventListener('touchstart', preventSafariOverscroll)\n    }\n  }, [expandOnContentDrag, scrollRef])\n\n  const handleDrag = ({\n    args: [{ closeOnTap = false, isContentDragging = false } = {}] = [],\n    cancel,\n    direction: [, direction],\n    down,\n    first,\n    last,\n    // memo = spring.y.getValue() as number,\n    memo = spring.y.get() as number,\n    movement: [, _my],\n    tap,\n    velocity,\n  }) => {\n    const my = _my * -1\n\n    // Cancel the drag operation if the canDrag state changed\n    if (!canDragRef.current) {\n      console.log('handleDrag cancelled dragging because canDragRef is false')\n      cancel()\n      return memo\n    }\n\n    if (onDismiss && closeOnTap && tap) {\n      cancel()\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\n      setTimeout(() => onDismiss(), 0)\n      return memo\n    }\n\n    // Filter out taps\n    if (tap) {\n      return memo\n    }\n\n    const rawY = memo + my\n    const predictedDistance = my * velocity\n    const predictedY = Math.max(\n      minSnapRef.current,\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\n    )\n\n    if (\n      !down &&\n      onDismiss &&\n      direction > 0 &&\n      rawY + predictedDistance < minSnapRef.current / 2\n    ) {\n      cancel()\n      onDismiss()\n      return memo\n    }\n\n    let newY = down\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\n        !onDismiss && minSnapRef.current === maxSnapRef.current\n        ? rawY < minSnapRef.current\n          ? rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current,\n              maxSnapRef.current * 2,\n              0.55\n            )\n          : rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current / 2,\n              maxSnapRef.current,\n              0.55\n            )\n        : rubberbandIfOutOfBounds(\n            rawY,\n            onDismiss ? 0 : minSnapRef.current,\n            maxSnapRef.current,\n            0.55\n          )\n      : predictedY\n\n    if (expandOnContentDrag && isContentDragging) {\n      if (newY >= maxSnapRef.current) {\n        newY = maxSnapRef.current\n      }\n\n      if (memo === maxSnapRef.current && scrollRef.current.scrollTop > 0) {\n        newY = maxSnapRef.current\n      }\n\n      preventScrollingRef.current = newY < maxSnapRef.current;\n    } else {\n      preventScrollingRef.current = false\n    }\n\n    if (first) {\n      send('DRAG')\n    }\n\n    if (last) {\n      send('SNAP', {\n        payload: {\n          y: newY,\n          velocity: velocity > 0.05 ? velocity : 1,\n          source: 'dragging',\n        },\n      })\n\n      return memo\n    }\n\n    // @TODO too many rerenders\n    //send('DRAG', { y: newY, velocity })\n    //*\n    set({\n      y: newY,\n      ready: 1,\n      maxHeight: maxHeightRef.current,\n      maxSnap: maxSnapRef.current,\n      minSnap: minSnapRef.current,\n      immediate: true,\n      config: { velocity },\n    })\n    // */\n\n    return memo\n  }\n\n  const bind = useDrag(handleDrag, {\n    filterTaps: true,\n  })\n\n  if (Number.isNaN(maxSnapRef.current)) {\n    throw new TypeError('maxSnapRef is NaN!!')\n  }\n  if (Number.isNaN(minSnapRef.current)) {\n    throw new TypeError('minSnapRef is NaN!!')\n  }\n\n  const interpolations = useSpringInterpolations({ spring })\n\n  return (\n    <animated.div\n      {...props}\n      data-rsbs-root\n      data-rsbs-state={publicStates.find(current.matches)}\n      data-rsbs-is-blocking={blocking}\n      data-rsbs-is-dismissable={!!onDismiss}\n      data-rsbs-has-header={!!header}\n      data-rsbs-has-footer={!!footer}\n      className={className}\n      ref={containerRef}\n      style={{\n        // spread in the interpolations yeees\n        ...interpolations,\n        // but allow overriding them/disabling them\n        ...style,\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\n        // @TODO the line below only fails on TS <4\n        // @ts-ignore\n        opacity: spring.ready,\n      }}\n    >\n      {sibling}\n      {blocking && (\n        <div\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\n          // that clips this element to the container, not allowing it to cover the full page.\n          key=\"backdrop\"\n          data-rsbs-backdrop\n          {...bind({ closeOnTap: true })}\n        />\n      )}\n      <div\n        key=\"overlay\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        data-rsbs-overlay\n        tabIndex={-1}\n        ref={overlayRef}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\n            event.stopPropagation()\n            if (onDismiss) onDismiss()\n          }\n        }}\n      >\n        {header !== false && (\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\n            {header}\n          </div>\n        )}\n        <div key=\"scroll\" data-rsbs-scroll ref={scrollRef} {...(expandOnContentDrag ? bind({ isContentDragging: true }) : {})}>\n          <div data-rsbs-content ref={contentRef}>\n            {children}\n          </div>\n        </div>\n        {footer && (\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </animated.div>\n  )\n})\n\n// Used for the data attribute, list over states available to CSS selectors\nconst publicStates = [\n  'closed',\n  'opening',\n  'open',\n  'closing',\n  'dragging',\n  'snapping',\n  'resizing',\n]\n\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\n  return lastSnap ?? Math.min(...snapPoints)\n}\nfunction _snapPoints({ minHeight }: SnapPointProps) {\n  return minHeight\n}\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\n\nimport { useCallback, useEffect, useState } from 'react'\n\nexport function useReady() {\n  const [ready, setReady] = useState(false)\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\n\n  const registerReady = useCallback((key: string) => {\n    console.count(`registerReady:${key}`)\n    // Register the check we're gonna wait for until it's ready\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\n\n    return () => {\n      console.count(`setReady:${key}`)\n      // Set it to ready\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\n    }\n  }, [])\n\n  useEffect(() => {\n    const states = Object.values(readyMap)\n\n    if (states.length === 0) {\n      console.log('nope nothing registered yet')\n      return\n    }\n\n    const isReady = states.every(Boolean)\n    console.log('check if we are rready', readyMap, isReady)\n    if (isReady) {\n      console.warn('ready!')\n      setReady(true)\n    }\n  }, [readyMap])\n\n  return { ready, registerReady }\n}\n","import { useSpring as useReactSpring } from '@react-spring/web'\n\n// Behold, the engine of it all!\n// Put in this file befause it makes it easier to type and I'm lazy! :D\n\nexport function useSpring() {\n  return useReactSpring(() => ({\n    y: 0,\n    ready: 0,\n    maxHeight: 0,\n    minSnap: 0,\n    maxSnap: 0,\n  }))\n}\n\nexport type Spring = ReturnType<typeof useSpring>[0]\nexport type SpringSet = ReturnType<typeof useSpring>[1]\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\n\n// @TODO refactor to addEventListener\nexport function useReducedMotion() {\n  const mql = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\n        : null,\n    []\n  )\n  const ref = useRef(mql?.matches)\n\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\n\n  useEffect(() => {\n    const handler = (event) => {\n      ref.current = event.matches\n    }\n    mql?.addListener(handler)\n\n    return () => mql?.removeListener(handler)\n  }, [mql])\n\n  return ref\n}\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\n/**\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\n *\n * On iOS the following may happen if scroll isn't locked:\n * - When dragging the sheet the background gets dragged at the same time.\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\n *\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\n * the bottom sheet drag interaction.\n */\nexport function useScrollLock({\n  targetRef,\n  enabled,\n  reserveScrollBarGap,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n  reserveScrollBarGap: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate scroll lock too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n        disableBodyScroll(target, {\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\n          reserveScrollBarGap,\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n        enableBodyScroll(target)\n      },\n    }\n  }, [enabled, targetRef, reserveScrollBarGap])\n\n  return ref\n}\n","import React, { useDebugValue, useEffect, useRef } from 'react'\n\n// Handle hiding and restoring aria-hidden attributes\nexport function useAriaHider({\n  targetRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate aria hider too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n    let originalValues: (null | string)[] = []\n    let rootNodes: Element[] = []\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n\n        const parentNode = target.parentNode\n\n        document.querySelectorAll('body > *').forEach((node) => {\n          if (node === parentNode) {\n            return\n          }\n          let attr = node.getAttribute('aria-hidden')\n          let alreadyHidden = attr !== null && attr !== 'false'\n          if (alreadyHidden) {\n            return\n          }\n          originalValues.push(attr)\n          rootNodes.push(node)\n          node.setAttribute('aria-hidden', 'true')\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        rootNodes.forEach((node, index) => {\n          let originalValue = originalValues[index]\n          if (originalValue === null) {\n            node.removeAttribute('aria-hidden')\n          } else {\n            node.setAttribute('aria-hidden', originalValue)\n          }\n        })\n        originalValues = []\n        rootNodes = []\n      },\n    }\n  }, [targetRef, enabled])\n\n  return ref\n}\n","import { createFocusTrap } from 'focus-trap'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\nexport function useFocusTrap({\n  targetRef,\n  fallbackRef,\n  initialFocusRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<HTMLElement>\n  fallbackRef: React.RefObject<HTMLElement>\n  initialFocusRef?: React.RefObject<HTMLElement>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate focus trap too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const fallback = fallbackRef.current\n    const trap = createFocusTrap(targetRef.current, {\n      onActivate:\n        process.env.NODE_ENV !== 'production'\n          ? () => {\n              console.log('focus activate')\n            }\n          : undefined,\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\n      initialFocus: initialFocusRef\n        ? () => initialFocusRef?.current || fallback\n        : undefined,\n      fallbackFocus: fallback,\n      escapeDeactivates: false,\n      clickOutsideDeactivates: false,\n    })\n    let active = false\n\n    ref.current = {\n      activate: async () => {\n        if (active) return\n        active = true\n\n        await trap.activate()\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        trap.deactivate()\n      },\n    }\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\n\n  return ref\n}\n","import { interpolate, to } from '@react-spring/web'\nimport type { Spring } from './useSpring'\nimport { clamp } from '../utils'\n\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\n// putting them here, in their own closure with explicitly defined variables used\n\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\n// so it's important that if anything can change outside of render that needs to be available\n// in the interpolation then a ref must be used\n\nexport function useSpringInterpolations({\n  spring,\n}: {\n  spring: Spring\n}): React.CSSProperties {\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\n  const interpolateBorderRadius = to(\n    [spring.y, spring.maxHeight],\n    (y, maxHeight) => {\n      return `${Math.round(clamp(maxHeight - y, 0, 16))}px`\n    }\n  )\n\n  /*\n   * Only animate the height when absolute necessary\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\n   *       but it should be possible to do it in other scenarios too, like on window resize,\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\n   */\n  const interpolateHeight = to(\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\n  )\n\n  const interpolateY = to(\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => {\n      if (y < minSnap) {\n        return `${minSnap - y}px`\n      }\n      if (y > maxSnap) {\n        return `${maxSnap - y}px`\n      }\n      return '0px'\n    }\n  )\n\n  const interpolateFiller = to(\n    [spring.y, spring.maxSnap],\n    (y, maxSnap) => {\n      if (y >= maxSnap) {\n        return Math.ceil(y - maxSnap)\n      }\n      return 0\n    }\n  )\n\n  const interpolateContentOpacity = to(\n    [spring.y, spring.minSnap],\n    (y, minSnap) => {\n      if (!minSnap) {\n        return 0\n      }\n      const minX = Math.max(minSnap / 2 - 45, 0)\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\n      const minY = 0\n      const maxY = 1\n\n      const slope = (maxY - minY) / (maxX - minX)\n      const res = (y - minX) * (slope + minY)\n      return clamp(res, 0, 1)\n    }\n  )\n\n  const interpolateBackdrop = to(\n    [spring.y, spring.minSnap],\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\n  )\n\n  return {\n    // Fancy content fade-in effect\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\n    // Fading in the backdrop\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\n    // Scaling the antigap in the bottom\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\n    // Remove rounded borders when full height, it looks much better this way\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\n  }\n}\n","/* eslint-disable react/jsx-pascal-case */\nimport { Portal } from '@reach/portal'\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\nimport type { Props, RefHandles, SpringEvent } from './types'\nimport { useLayoutEffect } from './hooks'\n\nexport type {\n  RefHandles as BottomSheetRef,\n  Props as BottomSheetProps,\n} from './types'\n\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\nexport const BottomSheet = forwardRef<RefHandles, Props>(function BottomSheet(\n  { onSpringStart, onSpringEnd, skipInitialTransition, ...props },\n  ref\n) {\n  // Mounted state, helps SSR but also ensures you can't tab into the sheet while it's closed, or nav there in a screen reader\n  const [mounted, setMounted] = useState(false)\n  const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\n  // The last point that the user snapped to, useful for open/closed toggling and the user defined height is remembered\n  const lastSnapRef = useRef(null)\n  // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\n  // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\n  // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\n  // It's only when initialState and props.open is mismatching that a intial transition should happen\n  // If they match then transitions will only happen when a user interaction or resize event happen.\n  const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\n    skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\n  )\n\n  // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\n  useLayoutEffect(() => {\n    if (props.open) {\n      cancelAnimationFrame(timerRef.current)\n      setMounted(true)\n\n      // Cleanup defaultOpen state on close\n      return () => {\n        initialStateRef.current = 'CLOSED'\n      }\n    }\n  }, [props.open])\n\n  const handleSpringStart = useCallback(\n    async function handleSpringStart(event: SpringEvent) {\n      // Forward the event\n      await onSpringStart?.(event)\n\n      if (event.type === 'OPEN') {\n        // Ensures that when it's opening we abort any pending unmount action\n        cancelAnimationFrame(timerRef.current)\n      }\n    },\n    [onSpringStart]\n  )\n\n  const handleSpringEnd = useCallback(\n    async function handleSpringEnd(event: SpringEvent) {\n      // Forward the event\n      await onSpringEnd?.(event)\n\n      if (event.type === 'CLOSE') {\n        // Unmount from the dom to avoid contents being tabbable or visible to screen readers while closed\n        timerRef.current = requestAnimationFrame(() => setMounted(false))\n      }\n    },\n    [onSpringEnd]\n  )\n\n  // This isn't just a performance optimization, it's also to avoid issues when running a non-browser env like SSR\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Portal data-rsbs-portal>\n      <_BottomSheet\n        {...props}\n        lastSnapRef={lastSnapRef}\n        ref={ref}\n        initialState={initialStateRef.current}\n        onSpringStart={handleSpringStart}\n        onSpringEnd={handleSpringEnd}\n      />\n    </Portal>\n  )\n})\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","roundAndCheckForNaN","unrounded","rounded","Math","round","Number","isNaN","observerOptions","box","useElementSizeObserver","ref","label","enabled","resizeSourceRef","size","setSize","useState","useDebugValue","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","createMachine","id","initial","context","initialState","snapSource","undefined","states","closed","on","OPEN","CLOSE","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","_extends","smoothly","visuallyHidden","end","done","type","cancelOpen","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","e","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onRezizeEnd","services","onSnapStart","async","onOpenStart","onCloseStart","onResizeStart","onCloseEnd","onResizeEnd","renderVisuallyHidden","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","initiallyOpen","_excluded","_excluded2","_excluded3","tension","friction","config","default","BottomSheet","React","forwardRef","_ref","children","sibling","className","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","maxHeight","controlledMaxHeight","defaultSnap","getDefaultSnap","_defaultSnap","snapPoints","getSnapPoints","_snapPoints","blocking","scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","reserveScrollBarGap","expandOnContentDrag","props","_objectWithoutPropertiesLoose","ready","registerReady","setReady","readyMap","updateReadyMap","key","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","spring","set","useReactSpring","minSnap","maxSnap","containerRef","scrollRef","contentRef","headerRef","footerRef","overlayRef","heightRef","preventScrollingRef","prefersReducedMotion","mql","useMemo","matchMedia","matches","handler","addListener","removeListener","useReducedMotion","scrollLockRef","targetRef","TypeError","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","useScrollLock","ariaHiderRef","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","useAriaHider","focusTrapRef","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","findSnap","footerEnabled","headerEnabled","minHeight","headerHeight","footerHeight","setMaxHeight","innerHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","contentHeight","min","useDimensions","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","max","processSnapPoints","height","numberOrCallback","unsafeSearch","lastSnap","querySnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","asyncSet","_ref2","onRest","opts","mass","args","send","useMachine","devTools","immediate","all","snap","useImperativeHandle","snapTo","elem","preventScrolling","preventDefault","preventSafariOverscroll","scrollTop","overflow","removeProperty","bind","useDrag","handleDrag","closeOnTap","isContentDragging","cancel","direction","down","first","last","memo","get","movement","_my","tap","my","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","interpolations","interpolateBorderRadius","to","interpolateHeight","interpolateY","interpolateFiller","ceil","minX","useSpringInterpolations","createElement","animated","div","publicStates","find","opacity","role","tabIndex","onKeyDown","stopPropagation","skipInitialTransition","mounted","setMounted","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","_BottomSheet"],"mappings":"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"}